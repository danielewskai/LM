stans_new[[length(stans_new) + 1]] <- stan
} else {
stans_new[[length(stans_new) + 1]] <- memory[[i]][[as.character(memorized)]]
}
}
stans <- stans_new
}
k <- k + 1
if (all(stans[[1]] == stans[[2]])) {
return(stans[[1]])
}
}
}
tree.gen <- function(n = 5, branching_factor = 2) {
edges <- list()
nei_matrix <- matrix(0, nrow = n, ncol = n)
add_edges <- function(v, w, branching_factor) {
children <- 0
for (i in 1:branching_factor) {
if (w <= n) {
edges[[length(edges) + 1]] <<- c(v, w)
w <- w + 1
children <- children + 1
} else {
break
}
}
return(w)
}
w <- 2
for (v in 1:(n - 1)) {
w <- add_edges(v, w, branching_factor)
if (w > n) {
break
}
}
for (i in 1:length(edges)) {
x <- edges[[i]][1]
y <- edges[[i]][2]
nei_matrix[x, y] <- 1
nei_matrix[y, x] <- 1
}
return(list(edges = edges, nei_matrix = nei_matrix))
}
plot(g, vertex.size = 25, vertex.color = ising(0.01, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.01, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.01, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.01, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.01, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.04, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.04, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.04, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.04, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.04, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.04, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1, vertex.label = NULL)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1, vertex.label = NULL)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1, vertex.label = NULL)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1, vertex.label = rep(NULL, 10))
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1, vertex.label = rep(NULL, 10))
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.01, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.01, tree.gen(10))+1, vertex.label = NA)
tes
tes
plot(g, vertex.size = 25, vertex.color = ising(0.01, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.01, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.01, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.01, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.01, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(2, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(2, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(2, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(2, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(2, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+1, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(1, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0.4, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10, branching_factor = 3))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10, branching_factor = 3))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10, branching_factor = 3))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10, branching_factor = 3))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10, branching_factor = 4))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10, branching_factor = 4))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10, branching_factor = 4))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10, branching_factor = 4))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10, branching_factor = 6))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10, branching_factor = 6))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(10, branching_factor = 6))+2, vertex.label = NA)
plot(g, vertex.size = 25, vertex.color = ising(0, tree.gen(20, branching_factor = 6))+2, vertex.label = NA)
vertices <- 1:10
edges <- unlist(tree.gen(10, branching_factor = 6))
g <- graph(edges, directed = FALSE)
edges
edges <- unlist(tree.gen(10, branching_factor = 6)$edges)
g <- graph(edges, directed = FALSE)
plot(g)
edges <- unlist(tree.gen(10, branching_factor = 4)$edges)
g <- graph(edges, directed = FALSE)
plot(g)
tree.gen
tree.gen <- function(n = 5, branching_factor = 2) {
edges <- list()
nei_matrix <- matrix(0, nrow = n, ncol = n)
add_edges <- function(v, w, branching_factor) {
children <- 0
nx <- sample.int(branching_factor, size = 1)
for (i in 1:nx) {
if (w <= n) {
edges[[length(edges) + 1]] <<- c(v, w)
w <- w + 1
children <- children + 1
} else {
break
}
}
return(w)
}
w <- 2
for (v in 1:(n - 1)) {
w <- add_edges(v, w, branching_factor)
if (w > n) {
break
}
}
for (i in 1:length(edges)) {
x <- edges[[i]][1]
y <- edges[[i]][2]
nei_matrix[x, y] <- 1
nei_matrix[y, x] <- 1
}
return(list(edges = edges, nei_matrix = nei_matrix))
}
edges <- unlist(tree.gen(10, branching_factor = 4)$edges)
g <- graph(edges, directed = FALSE)
plot(g)
edges <- unlist(tree.gen(10, branching_factor = 4)$edges)
g <- graph(edges, directed = FALSE)
plot(g)
tree.gen <- function(n = 5, branching_factor = 2) {
edges <- list()
nei_matrix <- matrix(0, nrow = n, ncol = n)
add_edges <- function(v, w, branching_factor) {
children <- 0
nx <- sample.int(branching_factor - 1, size = 1)
for (i in 1:nx) {
if (w <= n) {
edges[[length(edges) + 1]] <<- c(v, w)
w <- w + 1
children <- children + 1
} else {
break
}
}
return(w)
}
w <- 2
for (v in 1:(n - 1)) {
w <- add_edges(v, w, branching_factor)
if (w > n) {
break
}
}
for (i in 1:length(edges)) {
x <- edges[[i]][1]
y <- edges[[i]][2]
nei_matrix[x, y] <- 1
nei_matrix[y, x] <- 1
}
return(list(edges = edges, nei_matrix = nei_matrix))
}
edges <- unlist(tree.gen(10, branching_factor = 4)$edges)
g <- graph(edges, directed = FALSE)
plot(g)
styler::style_pkg()
# Create a sample graph
g <- make_tree(10, children = 2, mode = "undirected")
library(igraph)
# Create a sample graph
g <- make_tree(10, children = 2, mode = "undirected")
# Open a PNG device
png("tree_graph.png", width = 800, height = 600)
# Plot the graph without vertex labels
plot(g, vertex.label = NA, main = "Graph without Vertex Labels")
# Close the device
dev.off()
# E(g)$color <- "gray"
# E(g)$width <- 2
#
# # Plot the graph
# plot(g, vertex.label=V(g)$name, vertex.color=V(g)$color, vertex.size=V(g)$size,
#      edge.color=E(g)$color, edge.width=E(g)$width, main="Graph with Attributes")
#
# vertices <- 1:10
# edges <- unlist(complete.graph.gen(10)$edges)
# g <- graph(edges, directed=FALSE)
# E(g)$width <- 2
#
# # Plot the graph
# plot(g, vertex.label=V(g)$name, vertex.color=V(g)$color, vertex.size=V(g)$size,
#      edge.color=E(g)$color, edge.width=E(g)$width, main="Graph with Attributes")
#
# vertices <- 1:10
# edges <- unlist(complete.graph.gen(10)$edges)
# g <- graph(edges, directed=FALSE)
# plot(g, vertex.color = (ising(0.01, complete.graph.gen(10), step = log2(20)))+1, vertex.size = 50)
# Create a sample graph
g <- make_tree(10, children = 2, mode = "undirected")
# Plot the graph without vertex labels
plot(g, vertex.label = NA, main = "Graph without Vertex Labels")
# Save the plot as an image file
save_graph(g, "~/GitHub/LM/R/Wygenerowane obrazki/tree_graph.png", format = "png")
library(igraph)
# E(g)$width <- 2
#
# # Plot the graph
# plot(g, vertex.label=V(g)$name, vertex.color=V(g)$color, vertex.size=V(g)$size,
#      edge.color=E(g)$color, edge.width=E(g)$width, main="Graph with Attributes")
#
# vertices <- 1:10
# edges <- unlist(complete.graph.gen(10)$edges)
# g <- graph(edges, directed=FALSE)
# plot(g, vertex.color = (ising(0.01, complete.graph.gen(10), step = log2(20)))+1, vertex.size = 50)
# E(g)$width <- 2
#
# # Plot the graph
# plot(g, vertex.label=V(g)$name, vertex.color=V(g)$color, vertex.size=V(g)$size,
#      edge.color=E(g)$color, edge.width=E(g)$width, main="Graph with Attributes")
#
# vertices <- 1:10
# edges <- unlist(complete.graph.gen(10)$edges)
# g <- graph(edges, directed=FALSE)
# plot(g, vertex.color = (ising(0.01, complete.graph.gen(10), step = log2(20)))+1, vertex.size = 50)
library(igraph)
# Create a sample graph
g <- make_tree(10, children = 2, mode = "undirected")
# Plot the graph without vertex labels
plot(g, vertex.label = NA, main = "Graph without Vertex Labels")
# Save the plot as an image file
save_graph(g, "~/GitHub/LM/R/Wygenerowane obrazki/tree_graph.png", format = "png")
# Create a sample graph
g <- make_tree(10, children = 2, mode = "undirected")
# Open a PNG device
png("~/GitHub/LM/R/Wygenerowane obrazki/tree_graph.png", width = 800, height = 600)
# Plot the graph without vertex labels
plot(g, vertex.label = NA, main = "Graph without Vertex Labels")
# Close the device
dev.off()
vertices <- 1:10
edges <- unlist(complete.graph.gen(10)$edges)
complete.graph.gen <- function(n = 5) {
edges <- list()
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
edges[[length(edges) + 1]] <- c(i, j)
}
}
nei_matrix <- matrix(0, nrow = n, ncol = n)
for (i in 1:length(edges)) {
x <- edges[[i]][1]
y <- edges[[i]][2]
nei_matrix[x, y] <- 1
nei_matrix[y, x] <- 1
}
return(list(edges = edges, nei_matrix = nei_matrix))
}
edges <- unlist(complete.graph.gen(10)$edges)
g <- graph(edges, directed=FALSE)
ising <- function(temp = 0.01, graph = lattice.gen(3, 3), step = 50, s_up = rep(1, n)) {
new_state <- function(state, U_vec_step) {
n <- ncol(graph$nei_matrix)
stan <- state
v <- sample.int(n, 1)
nei_plus <- neighbours(graph$nei_matrix[v, ], stan)$nb_plus
nei_minus <- neighbours(graph$nei_matrix[v, ], stan)$nb_minus
prog <- exp(2 * temp * (nei_plus - nei_minus)) / (exp(2 * temp * (nei_plus - nei_minus)) + 1)
if (U_vec_step < prog) {
stan[v] <- 1
} else {
stan[v] <- -1
}
return(stan)
}
state_hash <- function(s) {
sum(2^(0:(length(s) - 1)) * ifelse(s > 0, 1, 0))
}
n <- ncol(graph$nei_matrix)
s_down <- rep(-1, n)
stans <- list(s_up, s_down)
U_vec <- c(runif(1))
k <- 0
memory <- list()
while (k < step) {
U_vec <- append(U_vec, runif(2^(k - 1)))
for (i in 1:2^(k - 1)) {
memory[[length(memory) + 1]] <- list()
}
for (i in (2^k):1) {
# print(i)
stans_new <- list()
for (s in stans) {
# print(s)
memorized <- state_hash(s)
if (is.null(memory[[i]][[as.character(memorized)]])) {
stan <- new_state(s, U_vec[i])
memory[[i]][[as.character(memorized)]] <- stan
stans_new[[length(stans_new) + 1]] <- stan
} else {
stans_new[[length(stans_new) + 1]] <- memory[[i]][[as.character(memorized)]]
}
}
stans <- stans_new
}
k <- k + 1
if (all(stans[[1]] == stans[[2]])) {
return(stans[[1]])
}
}
}
neighbours <- function(nei, state) {
tmp <- state[as.logical(nei)]
nb_plus <- sum(tmp == 1)
nb_minus <- length(tmp) - nb_plus
list(nb_minus = nb_minus, nb_plus = nb_plus)
}
plot(g, vertex.color = (ising(0.01, complete.graph.gen(10), step = log2(20)))+1, vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(10), step = log2(20)))+1, vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(10), step = log2(20)))+1, vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(10), step = log2(20)))+1, vertex.size = 50)
vertices <- 1:6
edges <- unlist(complete.graph.gen(6)$edges)
g <- graph(edges, directed=FALSE)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1, vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50, vertex.label = NA)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50, vertex.label = NA)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50, vertex.label = NA)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50, vertex.label = NA)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+1), vertex.size = 50, vertex.label = NA)
temp <- seq(0, 1, by = 0.01)
temp
plot(g, vertex.color = (ising(t, complete.graph.gen(6))+2), vertex.size = 50, vertex.label = NA)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+2), vertex.size = 50, vertex.label = NA)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+2), vertex.size = 50, vertex.label = NA)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+3), vertex.size = 50, vertex.label = NA)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+4), vertex.size = 50, vertex.label = NA)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+5), vertex.size = 50, vertex.label = NA)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+3), vertex.size = 50, vertex.label = NA)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+3), vertex.size = 50, vertex.label = NA)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+3), vertex.size = 50, vertex.label = NA)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+3), vertex.size = 50, vertex.label = NA)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+3), vertex.size = 50, vertex.label = NA)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+3), vertex.size = 50, vertex.label = NA)
t <- 0.01
paste("~/GitHub/LM/R/Wygenerowane obrazki/tree_graph",t,".png")
paste0("~/GitHub/LM/R/Wygenerowane obrazki/tree_graph", t, ".png")
paste0("~/GitHub/LM/R/Wygenerowane obrazki/tree_graph", t*100, ".png")
vertices <- 1:6
edges <- unlist(complete.graph.gen(6)$edges)
g <- graph(edges, directed=FALSE)
temp <- seq(0, 1, by = 0.01)
vertices <- 1:6
edges <- unlist(complete.graph.gen(6)$edges)
g <- graph(edges, directed=FALSE)
temp <- seq(0, 1, by = 0.01)
for (t in temp) {
file <- paste0("~/GitHub/LM/R/Wygenerowane obrazki/tree_graph", t*100, ".png")
png(file, width = 800, height = 600)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+3), vertex.size = 50, vertex.label = NA)
dev.off()
}
vertices <- 1:16
edges <- unlist(lattice.gen(4,4)$edges)
lattice.gen <- function(n_row = 3, n_col = 3) {
n <- n_row * n_col
nr_ver <- 1:n
edges <- list()
for (j in 1:n_col) {
for (i in 1:(n_row - 1)) {
edges[[length(edges) + 1]] <- c(j + (i - 1) * n_col, j + i * n_col)
}
}
for (i in 1:n_row) {
for (j in 1:(n_col - 1)) {
edges[[length(edges) + 1]] <- c(j + (i - 1) * n_col, j + (i - 1) * n_col + 1)
}
}
nei_matrix <- matrix(0, nrow = n, ncol = n)
for (i in 1:length(edges)) {
x <- edges[[i]][1]
y <- edges[[i]][2]
nei_matrix[x, y] <- 1
nei_matrix[y, x] <- 1
}
return(list(edges = edges, nei_matrix = nei_matrix))
}
g <- graph(edges, directed=FALSE)
temp <- seq(0, 1, by = 0.01)
vertices <- 1:16
edges <- unlist(lattice.gen(4,4)$edges)
g <- graph(edges, directed=FALSE)
temp <- seq(0, 1, by = 0.01)
for (t in temp) {
file <- paste0("~/GitHub/LM/R/Wygenerowane obrazki/tree_graph", t*100, ".png")
png(file, width = 800, height = 600)
plot(g, vertex.color = (ising(0.01, lattice.gen(4,4))+3), vertex.size = 50, vertex.label = NA)
dev.off()
}
vertices <- 1:6
edges <- unlist(complete.graph.gen(6)$edges)
g <- graph(edges, directed=FALSE)
temp <- seq(0, 1, by = 0.01)
for (t in temp) {
file <- paste0("~/GitHub/LM/R/Wygenerowane obrazki/tree_graph", t*100, ".png")
png(file, width = 800, height = 600)
plot(g, vertex.color = (ising(0.01, complete.graph.gen(6))+3), vertex.size = 50, vertex.label = NA)
dev.off()
}
vertices <- 1:16
edges <- unlist(lattice.gen(4,4)$edges)
g <- graph(edges, directed=FALSE)
temp <- seq(0, 1, by = 0.01)
for (t in temp) {
file <- paste0("~/GitHub/LM/R/Wygenerowane obrazki/lattice_graph", t*100, ".png")
png(file, width = 800, height = 600)
plot(g, vertex.color = (ising(0.01, lattice.gen(4,4))+3), vertex.size = 50, vertex.label = NA)
dev.off()
}
vertices <- 1:6
edges <- unlist(complete.graph.gen(6)$edges)
g <- graph(edges, directed=FALSE)
temp <- seq(0, 1, by = 0.01)
for (t in temp) {
file <- paste0("~/GitHub/LM/R/Wygenerowane obrazki/tree_graph", t*100, ".png")
png(file, width = 800, height = 600)
plot(g, vertex.color = (ising(t, complete.graph.gen(6))+3), vertex.size = 50, vertex.label = NA)
dev.off()
}
